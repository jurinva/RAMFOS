;+---------------------------------------------------------------------------
; RAMFOS
; Стандартная точка входа C836
; Ввод командной строки
;
; На входе
;  hl   - адрес буфера
;  d    - длина буфера
;  e=XX - режим без очистки знакоместа, можно двигаться вправо
;  e=00 - с очисткой знакоместа, вправо двигаться нельзя
;
; На выходе
;  a        - Последняя нажатая клавиша
;  jz       - Нажат ESC
;  jc       - Нажат Enter
;  jnz, jnc - Остальные функциональные кнопки
;  jp       - Строка пустая
;
; 2013-11-01 Дизассемблировано vinxru
;----------------------------------------------------------------------------

input:		; Сохраняем BC, HL
		push	b
		push	h

		; Зачем, не понял
		lxi	b, 8000h

input_inrc:	inr	c		; Ниже мы уменьшим C
input_inrd:	inr	d		; Ниже мы уменьшим D
input_ignore:	call	keyWait
		cpi	7Fh
		jz	input_ignore
		cpi	8
		jz	input_del	; При переходе на удаление C и D больше на единицу
		cpi	0Dh
		jz	input_enter	; Выход с флагами nz, c
		cpi	1Fh
		jz	input_esc	; Выход с флагами z, nc
		; Если не места для новых символов
		dcr	d
		jz	input_inrd
		; Вправо
		cpi	18h
		jz	input_right	; На входе С больше на единицу
		; Остальные служебные клавиши - выход
		cpi	20h
		inr	d		; Устанавливаем флаги nz
		jc	input_cmc	; Выход с флагами nz, nc
		dcr	d
		; Увеличиваем B
		inr	b
input_chr:	; Вывод символа на экран
		call	printCharA
		; Сохранение символа в памяти
		mov	m, a
		inx	h
		; Уменьшаем счетчик свободных байт
		dcr	d
		; Следующий символ
		jmp	input_inrc

; ---------------------------------------------------------------------------

input_enter:	ora	a	; Устанавливаем флаг - не нуль
		dcr	b       ; Если были введены символы, то флаг минус
input_cmc:	cmc		; Инвертируем CF
input_esc:	; Восстанавливаем DE, BC
		pop	d
		pop	b
		ret

; ---------------------------------------------------------------------------

input_right:	; Если режим 0, то вправо двигаться нельзя
		inr	e
		dcr	e
		jz	input_inrd

		; Если в буфере служебные символы, зменяем их на пробел и выводим
		mvi	a, ' ' 
		cmp	m
		jnc	input_chr

		; Если обычные символы, выводм
		mov	a, m
		jmp	input_chr

; ---------------------------------------------------------------------------

input_del:	; Перед вызовом D была увеличена на единицу, надо уменьшить
		dcr	d

		; Если ни одного байта не введено, выходим и увеличиваем С обратно
		dcr	c
		jz	input_inrc

                ; Если режим 0, то вместо удаленного символа ставим пробел
		dcr	e
		inr	e
		cz	printCharA	; На входе A=8
		mvi	a, ' '
		cz	printCharA

		; Курсор влево
		mvi	a, 8
		call	printCharA

		; Уменьшаем указатель
		dcx	h

		; Увеличиваем длину
		inr	d
		jmp	input_inrd